<?php
/*DEBUG*/ global $debug;
/*DEBUG*/ $debug = true;
/*DEBUG*/ if ($debug){ ini_set('display_errors', 1); error_reporting(E_ALL); }
/**
 * Multiple Image Upload Plugin
 * @author Jonas Bach <hallo@jonasbach.de>
 */
class jbx_MIU{
	/**
	 * Stores an instance
	 * @var jbx_MIU
	 */
	protected static $instance;

	/**
	 * Slug of this plugin
	 * @var string
	 */
	protected static $slug = 'jbx_multiple_image_upload';

	/**
	 * Plugin prefix
	 * @var string
	 */
	protected static $prefix = 'jbx_';

	/**
	 * All available preferences for this plugin
	 * @var array
	 */
	protected static $preferences = array(
		'importinfo'=> array('label'=>'Import additional info', 'descr'=>'Import meta info into caption.', 'type'=>2, 'default'=>'none'),
	);

	/**
	 * external assets
	 * @var array
	 */
	protected static $assets = array(
		'jquery.uploadify.min.js' => '',
		'uploadify.swf' => '',
		'jbx_multiple_image_upload.js' => 'eJyNVU1v2zAMPTu/QjACSG4DB9htjZPD1h0GbIet3blQbNpRq0iCJCfNhvz3UZYT5wNdl0MiUY+PIvmosLpVpRdasfGEbIWq9HZCKl22a1B+Qp6Xr08bbgVfSnAT0qoKaqGgysifUSJq5ncGdH0OI/P5nNAjlGYITSz41qrZKNmPEkSSNbcvrSFzMma0qMSGlJI7N08D09ZyY8Cmi2L1YUHJ7Tl97rwVqnF5a6Tm1dO6lV4YCYijxRQ9CvMPp5L7pxVIE9FmUUi+BPmOgxc+8pNCKNN6EtKepx5efXp6ccRCo+0uJYqv4dI2XRTTGO0y4T6TIe/TKLWQcCAM6x6dXhPEEMi9KJat91r1DHFz5uDa5Vp4YtqlFG6VLug7Re75brFmcfl/vXG4Oe1MdzmaoQyiCixHwa2/VqiDow5P5ELoSXVCMPad+1VeS61tXEYClpEb8rH7ZIF8PxtFfqGE/9W5i3p3FSQgxp7bBnwnRL8SLrjHA5BojDLNS6kVsCzQJtMp0jqwvj9EE2LzaPsEtbbAetbo0LH1BZ8H3hznomI0HxpBh7Ax22tgtNMs595bRkVFJ8fysezkahilPaQc7hY3+dHGQuoJdduaJsndRf8MFhW7uK0nHSg6gaVvAON5xPLW646x5tJBtEWtPOKc0EuCg1KWVm8P8CDvB/EbvolQk0uPs9PB4RE1fg+ufDOCWPMGH68zhy+v3qEDvckbUc/ITf5smvBjVENPr/45jEwAKr6RQr30h1o9gITSU3I3aCpwd7rCose25m6lt6zrbXj3kv2xTQ4FcujTaMAjCy2lKDHOwNuTQm4sbPBVvoea45vX8173lx6kMutDxnnAqDjBqJefwCtUxpgN0xBeczSc1y9q2GU58HLFzkapI8Wvfcaef7Rgd+/+d2Szv1hnFrI=',
		'jbx_multiple_image_upload.css' => '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'
	);

	/**
	 * Returns an instance
	 * @return jbx_MIU instance
	 */
	static function get_instance(){
		if ( null == self::$instance ) {
			self::$instance = new jbx_MIU();
		}

		return self::$instance;
	}

	/**
	 * Constructor
	 */
	public function __construct(){
		add_privs(self::$slug, '1');
		add_privs('plugin_prefs.'.self::$slug, '1');
		register_callback(array($this, 'handle_request'), self::$slug, '', 1);
		register_callback(array($this, 'inject_assets'), 'admin_side', 'head_end');
		register_callback(array($this, 'render_prefs'), 'plugin_prefs.'.self::$slug);
		register_callback(array($this, 'install'), 'plugin_lifecycle.'.self::$slug, 'installed');
		register_callback(array($this, 'uninstall'), 'plugin_lifecycle.'.self::$slug, 'deleted');
	}

	/**
	 * Called on plugin installation
	 */
	public function install(){

	}

	/**
	 * Called on plugin deletion
	 */
	public function uninstall(){

	}

	/**
	 * Inject scripts/styles in <head>
	 */
	public function inject_assets(){
		global $event;
		if($event === 'image'){
			echo '<link type="text/css" href="?event='.self::$slug.'&step=css" rel="stylesheet" />';
			echo '<script type="text/javascript" src="?event='.self::$slug.'&step=js"></script>';
		}
	}

	/**
	 * Entry point for requests
	 * @param  string $event 	the event being called
	 * @param  string $request  the step being called
	 */
	public function handle_request($event, $request){
		$requests = array(
			'js' => false,
			'css' => false,
			'swf' => false,
			'upload' => false
		);
		if (!$request || !bouncer($request, $requests)) {
			return;
		}

		switch ($request) {
			case 'upload':
				$this->handle_upload();
				break;
			
			default:
				$this->{'render_'.$request}();
				break;
		}
	}

	public function handle_upload(){
		global $path_to_site, $img_dir;

		// file size maxed out POST Content-Length (todo: fix)
		if (isset($_SERVER['CONTENT_LENGTH'])){
			$max_post_size = (int)ini_get('post_max_size')*1024*1024;
			if($_SERVER['CONTENT_LENGTH'] > $max_post_size){
				echo upload_get_errormsg(UPLOAD_ERR_INI_SIZE);
				die();
			}
		}

		include_once txpath . '/include/txp_image.php';

		// todo: handle meta
		$meta = false;
		$msg = image_data($_FILES['Filedata'], $meta);
		error_log(print_r($msg, true));
		if(is_array($msg)){
			echo '1';
			die();
		}else{
			echo $msg;
			die();
		}
	}

	/**
	 * Render JS assets
	 * @todo: use render_asset
	 */
	public function render_js(){
		global $file_max_upload_size;
		$script = '';

		// pass variables to JS
		//todo: show preflight messages if not satisfied
		$script_variables = array(
			'slug' => self::$slug,
			'paths' => array(
				'swf' => '?event='.self::$slug.'&step=swf',
				'upload' => '?event='.self::$slug.'&step=upload'
			),
			'fileSizeLimit' => $file_max_upload_size,
			'targets' => '.upload-form',
			'strings' => array(
				'images' => gTxt('Image files'),
				'upload_multiple' => gTxt('Upload Multiple Images'),
				'upload_single' => gTxt('Upload Single Image'),
				'upload_button' => gTxt('Upload'),
				'cat_title' => gTxt('Category'),
				'cat_help' => gTxt('Images will be uploaded to this category. Leave blank if no category should be assigned.'),
				'browse' => gTxt('Select files…')
			)
		);

		$script .= $this->get_asset('jquery.uploadify.min.js');
		$script .= 'var jbx_variables = '.json_encode($script_variables).';';
		$script .= $this->get_asset('jbx_multiple_image_upload.js');
		send_script_response($script);
		die();
	}

	/**
	 * Render swf
	 */
	public function render_swf(){
		$this->render_asset('uploadify.swf', 'application/x-shockwave-flash');
	}

	/**
	 * Render stylesheets
	 */
	public function render_css(){
		$this->render_asset('jbx_multiple_image_upload.css', 'text/css');
	}

	/**
	 * Generic asset renderer
	 * @param  string $file file handle
	 * @param  string $mime mimetype
	 */
	public function render_asset($file, $mime = 'text/plain'){
		$file = $this->get_asset($file);
		ob_clean();
		header('Content-Type: '.$mime.'; charset=utf-8');
		txp_status_header('200 OK');
		echo $file;
		die();
	}

	/**
	 * Render options page
	 * @param  string $event the event being called
	 * @param  string $step  the step being called
	 */
	public function render_prefs($event, $step){
		if($step === 'update'){
			$this->update_prefs();
		}

		pageTop(gTxt('Multiple Image Upload'));

		// todo: show preflight/sanity errors if any
		
		// Generate Preferences Table
		$out = hed(gTxt('Multiple Image Upload - Preferences'), 1);
		$out .= startTable($this->prefix('preferences'), 'center', 5);
		foreach (self::$preferences as $key => $pref) {
			$out .= $this->render_pref($key, $pref);
		}
		
		// render save button
		$out .= tr(tdcs(eInput('plugin_prefs.'.self::$slug).sInput('update').fInput('submit', 'save', gTxt('save_button'), 'publish'), 3, '', 'nolin'));
		
		$out .= endtable();

		echo form($out);
	}

	/**
	 * Render single preference row
	 * @param  array $pref preference array
	 * @return string      <tr> containing the preference
	 */
	private function render_pref($id, $pref){
		$value = $this->get_pref($id);
		$id = $this->prefix($id);

		// render label
		$out = fLabelCell(gTxt($pref['label']), '', $id);

		// render field
		switch($pref['type']){
			case 2:
				$out .= td(selectInput($id, array(gTxt('None') => '', 'EXIF'=>'exif', 'IPTC'=>'iptc'), $value));
			break;

			case 1:
				$out .= td(yesnoRadio($id, $value));
			break;

			default:
				$out .= fInputCell($id, $value, '', 20, '', $id);
			break;
		}

		// render help
		$out .= td(gTxt($pref['descr']));

		// render save
		
		return tr($out);
	}

	/**
	 * Update preferences from submitted form
	 */
	private function update_prefs(){
		foreach (self::$preferences as $key => $pref) {
			$this->set_pref($key, gps($this->prefix($key)));
		}
		txp_die('', '302', '?event=plugin_prefs.'.self::$slug);
	}

	/**
	 * Get prefixed string
	 * @param  string $value unprefixed string
	 * @return string        prefixed string
	 */
	private function prefix($value = ''){
		return self::$prefix.$value;
	}

	/**
	 * Get preference from DB
	 * @param  string $id field to get
	 * @return mixed      stored preference
	 */
	private function get_pref($id){
		return get_pref($this->prefix($id), self::$preferences[$id]['default']);
	}

	/**
	 * Set preference (update/insert)
	 * @param string $id  unprefixed key of preference
	 * @param string $val value to save
	 */
	private function set_pref($id, $val = '', $default = ''){
		$default = ($default === '')? self::$preferences[$id]['default'] : $default;
		$val = trim($val);
		$val = ($val === '') ? $default : $val;
		return set_pref($this->prefix($id), $val, self::$slug, 2);
	}

	/**
	 * Unzip and decode asset from gzipped, base64 string
	 * @param  string $file file handle
	 * @return string       file content
	 */
	private function get_asset($file){
		if(array_key_exists($file, self::$assets)){
			return gzuncompress(base64_decode(self::$assets[$file]));
		}
		return '';
	}

	/**
	 * Recursive directory delete
	 * @param  string $dirname path to directory
	 */
	private function rmdirr($dirname){
		// Sanity check
		if (!file_exists($dirname)) {
			return false;
		}

		// Simple delete for a file
		if (is_file($dirname) || is_link($dirname)) {
			return unlink($dirname);
		}

		// Loop through the folder
		$dir = dir($dirname);
		while (false !== $entry = $dir->read()) {
			// Skip pointers
			if ($entry == '.' || $entry == '..') {
				continue;
			}

			// Recurse
			$this->rmdirr($dirname . DIRECTORY_SEPARATOR . $entry);
		}

		// Clean up
		$dir->close();
		return rmdir($dirname);
	}
}

// Initialize plugin
if(@txpinterface === 'admin'){
	jbx_MIU::get_instance();
}
?>